// Code generated by protoc-gen-go. DO NOT EDIT.
// source: FSProtos.proto

package hadoop_fs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileStatusProto_FileType int32

const (
	FileStatusProto_FT_DIR     FileStatusProto_FileType = 1
	FileStatusProto_FT_FILE    FileStatusProto_FileType = 2
	FileStatusProto_FT_SYMLINK FileStatusProto_FileType = 3
)

var FileStatusProto_FileType_name = map[int32]string{
	1: "FT_DIR",
	2: "FT_FILE",
	3: "FT_SYMLINK",
}

var FileStatusProto_FileType_value = map[string]int32{
	"FT_DIR":     1,
	"FT_FILE":    2,
	"FT_SYMLINK": 3,
}

func (x FileStatusProto_FileType) Enum() *FileStatusProto_FileType {
	p := new(FileStatusProto_FileType)
	*p = x
	return p
}

func (x FileStatusProto_FileType) String() string {
	return proto.EnumName(FileStatusProto_FileType_name, int32(x))
}

func (x *FileStatusProto_FileType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FileStatusProto_FileType_value, data, "FileStatusProto_FileType")
	if err != nil {
		return err
	}
	*x = FileStatusProto_FileType(value)
	return nil
}

func (FileStatusProto_FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_119697c86f09537a, []int{1, 0}
}

type FileStatusProto_Flags int32

const (
	FileStatusProto_HAS_ACL          FileStatusProto_Flags = 1
	FileStatusProto_HAS_CRYPT        FileStatusProto_Flags = 2
	FileStatusProto_HAS_EC           FileStatusProto_Flags = 4
	FileStatusProto_SNAPSHOT_ENABLED FileStatusProto_Flags = 8
)

var FileStatusProto_Flags_name = map[int32]string{
	1: "HAS_ACL",
	2: "HAS_CRYPT",
	4: "HAS_EC",
	8: "SNAPSHOT_ENABLED",
}

var FileStatusProto_Flags_value = map[string]int32{
	"HAS_ACL":          1,
	"HAS_CRYPT":        2,
	"HAS_EC":           4,
	"SNAPSHOT_ENABLED": 8,
}

func (x FileStatusProto_Flags) Enum() *FileStatusProto_Flags {
	p := new(FileStatusProto_Flags)
	*p = x
	return p
}

func (x FileStatusProto_Flags) String() string {
	return proto.EnumName(FileStatusProto_Flags_name, int32(x))
}

func (x *FileStatusProto_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FileStatusProto_Flags_value, data, "FileStatusProto_Flags")
	if err != nil {
		return err
	}
	*x = FileStatusProto_Flags(value)
	return nil
}

func (FileStatusProto_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_119697c86f09537a, []int{1, 1}
}

type FsPermissionProto struct {
	Perm                 *uint32  `protobuf:"varint,1,req,name=perm" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsPermissionProto) Reset()         { *m = FsPermissionProto{} }
func (m *FsPermissionProto) String() string { return proto.CompactTextString(m) }
func (*FsPermissionProto) ProtoMessage()    {}
func (*FsPermissionProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_119697c86f09537a, []int{0}
}

func (m *FsPermissionProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsPermissionProto.Unmarshal(m, b)
}
func (m *FsPermissionProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsPermissionProto.Marshal(b, m, deterministic)
}
func (m *FsPermissionProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsPermissionProto.Merge(m, src)
}
func (m *FsPermissionProto) XXX_Size() int {
	return xxx_messageInfo_FsPermissionProto.Size(m)
}
func (m *FsPermissionProto) XXX_DiscardUnknown() {
	xxx_messageInfo_FsPermissionProto.DiscardUnknown(m)
}

var xxx_messageInfo_FsPermissionProto proto.InternalMessageInfo

func (m *FsPermissionProto) GetPerm() uint32 {
	if m != nil && m.Perm != nil {
		return *m.Perm
	}
	return 0
}

//
// FileStatus encoding. Field IDs match those from HdfsFileStatusProto, but
// cross-serialization is not an explicitly supported use case. Unlike HDFS,
// most fields are optional and do not define defaults.
type FileStatusProto struct {
	FileType         *FileStatusProto_FileType `protobuf:"varint,1,req,name=fileType,enum=hadoop.fs.FileStatusProto_FileType" json:"fileType,omitempty"`
	Path             *string                   `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	Length           *uint64                   `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	Permission       *FsPermissionProto        `protobuf:"bytes,4,opt,name=permission" json:"permission,omitempty"`
	Owner            *string                   `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	Group            *string                   `protobuf:"bytes,6,opt,name=group" json:"group,omitempty"`
	ModificationTime *uint64                   `protobuf:"varint,7,opt,name=modification_time,json=modificationTime" json:"modification_time,omitempty"`
	AccessTime       *uint64                   `protobuf:"varint,8,opt,name=access_time,json=accessTime" json:"access_time,omitempty"`
	Symlink          *string                   `protobuf:"bytes,9,opt,name=symlink" json:"symlink,omitempty"`
	BlockReplication *uint32                   `protobuf:"varint,10,opt,name=block_replication,json=blockReplication" json:"block_replication,omitempty"`
	BlockSize        *uint64                   `protobuf:"varint,11,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	// locations                          = 12
	// alias                              = 13
	// childrenNum                        = 14
	EncryptionData []byte `protobuf:"bytes,15,opt,name=encryption_data,json=encryptionData" json:"encryption_data,omitempty"`
	// storagePolicy                      = 16
	EcData               []byte   `protobuf:"bytes,17,opt,name=ec_data,json=ecData" json:"ec_data,omitempty"`
	Flags                *uint32  `protobuf:"varint,18,opt,name=flags,def=0" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileStatusProto) Reset()         { *m = FileStatusProto{} }
func (m *FileStatusProto) String() string { return proto.CompactTextString(m) }
func (*FileStatusProto) ProtoMessage()    {}
func (*FileStatusProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_119697c86f09537a, []int{1}
}

func (m *FileStatusProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileStatusProto.Unmarshal(m, b)
}
func (m *FileStatusProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileStatusProto.Marshal(b, m, deterministic)
}
func (m *FileStatusProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileStatusProto.Merge(m, src)
}
func (m *FileStatusProto) XXX_Size() int {
	return xxx_messageInfo_FileStatusProto.Size(m)
}
func (m *FileStatusProto) XXX_DiscardUnknown() {
	xxx_messageInfo_FileStatusProto.DiscardUnknown(m)
}

var xxx_messageInfo_FileStatusProto proto.InternalMessageInfo

const Default_FileStatusProto_Flags uint32 = 0

func (m *FileStatusProto) GetFileType() FileStatusProto_FileType {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return FileStatusProto_FT_DIR
}

func (m *FileStatusProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *FileStatusProto) GetLength() uint64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *FileStatusProto) GetPermission() *FsPermissionProto {
	if m != nil {
		return m.Permission
	}
	return nil
}

func (m *FileStatusProto) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *FileStatusProto) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *FileStatusProto) GetModificationTime() uint64 {
	if m != nil && m.ModificationTime != nil {
		return *m.ModificationTime
	}
	return 0
}

func (m *FileStatusProto) GetAccessTime() uint64 {
	if m != nil && m.AccessTime != nil {
		return *m.AccessTime
	}
	return 0
}

func (m *FileStatusProto) GetSymlink() string {
	if m != nil && m.Symlink != nil {
		return *m.Symlink
	}
	return ""
}

func (m *FileStatusProto) GetBlockReplication() uint32 {
	if m != nil && m.BlockReplication != nil {
		return *m.BlockReplication
	}
	return 0
}

func (m *FileStatusProto) GetBlockSize() uint64 {
	if m != nil && m.BlockSize != nil {
		return *m.BlockSize
	}
	return 0
}

func (m *FileStatusProto) GetEncryptionData() []byte {
	if m != nil {
		return m.EncryptionData
	}
	return nil
}

func (m *FileStatusProto) GetEcData() []byte {
	if m != nil {
		return m.EcData
	}
	return nil
}

func (m *FileStatusProto) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_FileStatusProto_Flags
}

//*
// Placeholder type for consistent basic FileSystem operations.
type LocalFileSystemPathHandleProto struct {
	Mtime                *uint64  `protobuf:"varint,1,opt,name=mtime" json:"mtime,omitempty"`
	Path                 *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalFileSystemPathHandleProto) Reset()         { *m = LocalFileSystemPathHandleProto{} }
func (m *LocalFileSystemPathHandleProto) String() string { return proto.CompactTextString(m) }
func (*LocalFileSystemPathHandleProto) ProtoMessage()    {}
func (*LocalFileSystemPathHandleProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_119697c86f09537a, []int{2}
}

func (m *LocalFileSystemPathHandleProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalFileSystemPathHandleProto.Unmarshal(m, b)
}
func (m *LocalFileSystemPathHandleProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalFileSystemPathHandleProto.Marshal(b, m, deterministic)
}
func (m *LocalFileSystemPathHandleProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalFileSystemPathHandleProto.Merge(m, src)
}
func (m *LocalFileSystemPathHandleProto) XXX_Size() int {
	return xxx_messageInfo_LocalFileSystemPathHandleProto.Size(m)
}
func (m *LocalFileSystemPathHandleProto) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalFileSystemPathHandleProto.DiscardUnknown(m)
}

var xxx_messageInfo_LocalFileSystemPathHandleProto proto.InternalMessageInfo

func (m *LocalFileSystemPathHandleProto) GetMtime() uint64 {
	if m != nil && m.Mtime != nil {
		return *m.Mtime
	}
	return 0
}

func (m *LocalFileSystemPathHandleProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func init() {
	proto.RegisterEnum("hadoop.fs.FileStatusProto_FileType", FileStatusProto_FileType_name, FileStatusProto_FileType_value)
	proto.RegisterEnum("hadoop.fs.FileStatusProto_Flags", FileStatusProto_Flags_name, FileStatusProto_Flags_value)
	proto.RegisterType((*FsPermissionProto)(nil), "hadoop.fs.FsPermissionProto")
	proto.RegisterType((*FileStatusProto)(nil), "hadoop.fs.FileStatusProto")
	proto.RegisterType((*LocalFileSystemPathHandleProto)(nil), "hadoop.fs.LocalFileSystemPathHandleProto")
}

func init() { proto.RegisterFile("FSProtos.proto", fileDescriptor_119697c86f09537a) }

var fileDescriptor_119697c86f09537a = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0xdb, 0x8a, 0xdb, 0x3c,
	0x14, 0x85, 0x51, 0x26, 0x27, 0xef, 0xfc, 0x49, 0x1c, 0x11, 0xfe, 0xea, 0xa2, 0x07, 0x93, 0x42,
	0xc7, 0x50, 0x08, 0x65, 0x7a, 0x57, 0x0a, 0x25, 0x27, 0x93, 0xb4, 0x69, 0x1a, 0x64, 0xdf, 0xcc,
	0x95, 0x51, 0x1d, 0x25, 0x11, 0x63, 0x5b, 0xc6, 0xd2, 0x50, 0x32, 0x4f, 0xd0, 0xc7, 0xe8, 0x3b,
	0xf6, 0x05, 0x8a, 0xe5, 0x9c, 0x98, 0x2b, 0x6b, 0x2d, 0x7d, 0xda, 0x7b, 0x5b, 0x5e, 0x86, 0x8e,
	0xe7, 0xaf, 0x73, 0xa9, 0xa5, 0x1a, 0x66, 0xc5, 0x03, 0x5b, 0x7b, 0xb6, 0x91, 0x32, 0x1b, 0x6e,
	0xd5, 0xe0, 0x16, 0x7a, 0x9e, 0x5a, 0xf3, 0x3c, 0x11, 0x4a, 0x09, 0x99, 0x1a, 0x0c, 0x63, 0xa8,
	0x66, 0x3c, 0x4f, 0x08, 0x72, 0x2a, 0x6e, 0x9b, 0x9a, 0xf5, 0xe0, 0x6f, 0x15, 0xba, 0x9e, 0x88,
	0xb9, 0xaf, 0x99, 0x7e, 0x54, 0x25, 0xf7, 0x05, 0x9a, 0x5b, 0x11, 0xf3, 0xe0, 0x90, 0x71, 0xc3,
	0x76, 0xee, 0xde, 0x0e, 0xcf, 0xa5, 0x87, 0xcf, 0x68, 0xa3, 0x0b, 0x94, 0x9e, 0x0f, 0x99, 0x46,
	0x4c, 0xef, 0x49, 0xc5, 0xa9, 0xb8, 0x16, 0x35, 0x6b, 0xfc, 0x3f, 0xd4, 0x63, 0x9e, 0xee, 0xf4,
	0x9e, 0xdc, 0x38, 0xc8, 0xad, 0xd2, 0xa3, 0xc2, 0x9f, 0x01, 0xb2, 0xf3, 0x9c, 0xa4, 0xea, 0x20,
	0xb7, 0x75, 0xf7, 0xf2, 0xba, 0xdd, 0xf3, 0xd7, 0xa0, 0x57, 0x3c, 0xee, 0x43, 0x4d, 0xfe, 0x4a,
	0x79, 0x4e, 0x6a, 0x0e, 0x72, 0x2d, 0x5a, 0x8a, 0xc2, 0xdd, 0xe5, 0xf2, 0x31, 0x23, 0xf5, 0xd2,
	0x35, 0x02, 0xbf, 0x87, 0x5e, 0x22, 0x37, 0x62, 0x2b, 0x22, 0xa6, 0x85, 0x4c, 0x43, 0x2d, 0x12,
	0x4e, 0x1a, 0x66, 0x18, 0xfb, 0x7a, 0x23, 0x10, 0x09, 0xc7, 0x6f, 0xa0, 0xc5, 0xa2, 0x88, 0x2b,
	0x55, 0x62, 0x4d, 0x83, 0x41, 0x69, 0x19, 0x80, 0x40, 0x43, 0x1d, 0x92, 0x58, 0xa4, 0x0f, 0xc4,
	0x32, 0x5d, 0x4e, 0xb2, 0xe8, 0xf3, 0x33, 0x96, 0xd1, 0x43, 0x98, 0xf3, 0x2c, 0x3e, 0xd6, 0x24,
	0xe0, 0x20, 0xb7, 0x4d, 0x6d, 0xb3, 0x41, 0x2f, 0x3e, 0x7e, 0x05, 0x50, 0xc2, 0x4a, 0x3c, 0x71,
	0xd2, 0x32, 0x6d, 0x2c, 0xe3, 0xf8, 0xe2, 0x89, 0xe3, 0x5b, 0xe8, 0xf2, 0x34, 0xca, 0x0f, 0x99,
	0x99, 0x78, 0xc3, 0x34, 0x23, 0x5d, 0x07, 0xb9, 0xff, 0xd1, 0xce, 0xc5, 0x9e, 0x32, 0xcd, 0xf0,
	0x0b, 0x68, 0xf0, 0xa8, 0x04, 0x7a, 0x06, 0xa8, 0xf3, 0xe8, 0xb8, 0x51, 0xdb, 0xc6, 0x6c, 0xa7,
	0x08, 0x2e, 0x26, 0xf8, 0x84, 0x3e, 0xd0, 0x52, 0x0f, 0x3e, 0x42, 0xf3, 0xf4, 0xe9, 0x30, 0x40,
	0xdd, 0x0b, 0xc2, 0xe9, 0x82, 0xda, 0x08, 0xb7, 0xa0, 0xe1, 0x05, 0xa1, 0xb7, 0x58, 0xce, 0xec,
	0x0a, 0xee, 0x00, 0x78, 0x41, 0xe8, 0xdf, 0x7f, 0x5f, 0x2e, 0x56, 0xdf, 0xec, 0x9b, 0xc1, 0x0c,
	0x6a, 0x5e, 0x71, 0xba, 0xa0, 0xe6, 0x23, 0x3f, 0x1c, 0x4d, 0x96, 0x36, 0xc2, 0x6d, 0xb0, 0x0a,
	0x31, 0xa1, 0xf7, 0xeb, 0xc0, 0xae, 0x14, 0xd5, 0x0a, 0x39, 0x9b, 0xd8, 0x55, 0xdc, 0x07, 0xdb,
	0x5f, 0x8d, 0xd6, 0xfe, 0xfc, 0x47, 0x10, 0xce, 0x56, 0xa3, 0xf1, 0x72, 0x36, 0xb5, 0x9b, 0x83,
	0xaf, 0xf0, 0x7a, 0x29, 0x23, 0x16, 0x9b, 0x2c, 0x1d, 0x94, 0xe6, 0xc9, 0x9a, 0xe9, 0xfd, 0x9c,
	0xa5, 0x9b, 0x98, 0x97, 0x19, 0xec, 0x43, 0x2d, 0x31, 0x37, 0x8f, 0xcc, 0x95, 0x94, 0xe2, 0x2a,
	0x58, 0xe8, 0x14, 0xac, 0xf1, 0x3b, 0xe8, 0xcb, 0x7c, 0x37, 0x64, 0x19, 0x8b, 0xf6, 0xfc, 0x12,
	0x9c, 0x71, 0xf3, 0xf4, 0x77, 0xfc, 0x46, 0xe8, 0x0f, 0x42, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xc2, 0xd9, 0x9d, 0xff, 0x2e, 0x03, 0x00, 0x00,
}
